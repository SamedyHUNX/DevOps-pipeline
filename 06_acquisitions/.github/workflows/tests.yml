name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_database
      
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        id: test
        run: |
          if npm test; then
            echo "test_result=success" >> $GITHUB_OUTPUT
            echo "::notice title=Tests Passed::All tests passed successfully! ✅"
          else
            echo "test_result=failure" >> $GITHUB_OUTPUT
            echo "::error title=Test Failures::Some tests failed. Please check the test output above for details."
            echo "::warning::Review the failed tests and fix any issues before merging."
            exit 1
          fi
      
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30
      
      - name: Generate test summary
        if: always()
        run: |
          if [ -f coverage/coverage-final.json ]; then
            # Extract coverage summary from Jest output
            echo "## 📊 Test Results Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.test.outputs.test_result }}" == "success" ]; then
              echo "✅ **All tests passed!**" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Some tests failed**" >> $GITHUB_STEP_SUMMARY
            fi
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Coverage Reports" >> $GITHUB_STEP_SUMMARY
            echo "- Coverage reports have been uploaded as artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- Available formats: JSON, LCOV, Clover XML" >> $GITHUB_STEP_SUMMARY
            echo "- Retention period: 30 days" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Check if lcov.info exists for coverage percentage
            if [ -f coverage/lcov.info ]; then
              echo "### Coverage Files Generated" >> $GITHUB_STEP_SUMMARY
              echo "- ✅ LCOV report (coverage/lcov.info)" >> $GITHUB_STEP_SUMMARY
              echo "- ✅ JSON report (coverage/coverage-final.json)" >> $GITHUB_STEP_SUMMARY
              echo "- ✅ Clover XML (coverage/clover.xml)" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## 📊 Test Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            if [ "${{ steps.test.outputs.test_result }}" == "success" ]; then
              echo "✅ **Tests completed successfully**" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Tests failed**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Please check the test output above for detailed error messages." >> $GITHUB_STEP_SUMMARY
            fi
          fi