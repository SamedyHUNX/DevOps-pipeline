version: '3.8'

services:
  # Application Service for Production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: acquisitions-app-prod
    ports:
      - '3000:3000'
    env_file:
      - .env.production
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - acquisitions-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'node -e "const http = require(''http''); const req = http.request(''http://localhost:3000/health'', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on(''error'', () => process.exit(1)); req.end();"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Reverse Proxy (Nginx) for production
  nginx:
    image: nginx:alpine
    container_name: acquisitions-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - acquisitions-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

networks:
  acquisitions-network:
    driver: bridge
